---
import { getCollection } from "astro:content";
import Layout from "../layouts/Layout.astro";
import BlogCard from "../components/BlogCard.astro";
const [...posts] = (await getCollection("blog")).sort(
	(a, b) =>
		(new Date(b.data.pubDate) as any) - (new Date(a.data.pubDate) as any),
);
const pageTitle = "Blog";
---

<Layout title={pageTitle}>
	<div class="inline-flex sm:overflow-hidden justify-between">
		<h1 class="inline-flex pb-0">Posts</h1>

		<input
			class="blog-search"
			type="text"
			id="searchInput"
			placeholder="search..."
			value=""
		/>
	</div>
	<div id="blogsContainer">
		{
			posts.map((post: any) => {
				return (
					<BlogCard
						id={post.id}
						title={post.data.title}
						author={post.data.author}
						description={post.data.description}
						pubDate={post.data.pubDate}
						tags={post.data.tags}
					/>
				);
			})
		}
	</div>
	<script>
		import debounce from "../utils/debounce.js";
		//let blogIndex: any[];

		//document.addEventListener("DOMContentLoaded", async () => {
		//	const response = await fetch("/api/blog-index.json");
		//	const data = await response.json();
		//	blogIndex = data;
		//});

		const searchInput = document.getElementById(
			"searchInput",
		) as HTMLInputElement;
		const blogCards = document.querySelectorAll(
			".blog-card",
		) as NodeListOf<HTMLDivElement>;

		searchInput.value = "";

		function handleSearch() {
			let returnedCards: HTMLDivElement[];
			returnedCards = [];
			const query = searchInput.value.trim().toLowerCase();
			if (query === "") {
				blogCards.forEach((card: any) => {
					card.classList.remove("hidden");

					let elements: any[] = [
						card.querySelector(".blog-title"),
						card.querySelector(".blog-author-date"),
						card.querySelector(".blog-description"),
					];

					elements.forEach((element: Element) => {
						if (element.className.includes("title")) {
							element.innerHTML = card.dataset.title;
						} else if (element.className.includes("author")) {
							element.innerHTML = `${card.dataset.author} - ${card.dataset.date}`;
						} else if (element.className.includes("description")) {
							element.innerHTML = card.dataset.description;
						}
					});
				});

				return;
			}

			blogCards.forEach((card) => {
				const { id, title, description, author, date, tags } =
					card.dataset;
				const searchableText = [
					id,
					title,
					description,
					author,
					date,
					tags,
				]
					.join(" ")
					.toLowerCase();

				if (searchableText.includes(query)) {
					returnedCards.push(card);
					card.classList.remove("hidden");
				} else {
					card.classList.add("hidden");
				}
			});

			returnedCards.forEach((card) => {
				let elements: any[];
				elements = [
					card.querySelector(".blog-title"),
					card.querySelector(".blog-author-date"),
					card.querySelector(".blog-description"),
				];

				elements.forEach((element: Element) => {
					if (element.className.includes("title")) {
						element.innerHTML = `${card.dataset.title}`;
					} else if (element.className.includes("author")) {
						element.innerHTML = `${card.dataset.author} - ${card.dataset.date}`;
					} else if (element.className.includes("description")) {
						element.innerHTML = `${card.dataset.description}`;
					}

					console.log(element.className);
					let htmlStr = element.innerHTML;
					let compareStr = htmlStr.toLowerCase();
					if (compareStr.includes(query)) {
						let slicePos = compareStr.indexOf(query);
						let slicedStr = htmlStr.slice(
							slicePos,
							query.length + slicePos,
						);
						let appendedStr = `<span class="highlight">${slicedStr}</span>`;
						let newStr = htmlStr.replace(slicedStr, appendedStr);
						element.innerHTML = newStr;
					}
				});
				//
				//console.log(elements);
				//for (
				//	let child = card.firstChild;
				//	child !== null;
				//	child = child.nextSibling
				//) {
				//	if (child.innerHTML == undefined) {
				//		console.log(undefined); // console log
				//		continue;
				//	}
				//	let htmlStr = child.innerHTML;
				//	let htmlCompare = htmlStr.toLowerCase();
				//	if (htmlCompare.includes(query)) {
				//		let slicePos = htmlCompare.match(query);
				//		console.log(htmlStr); // console log
				//		console.log(slicePos); // console log
				//	}
				//}
			});
		}

		searchInput?.addEventListener("input", debounce(handleSearch, 300));
	</script>
</Layout>
